#!/bin/bash

set -e
trap 'echo "üî¥ –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; exit' SIGINT

# –î–æ–ª–∂–µ–Ω –ª–∏ –ø–æ—Ä—Ç –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω —Å–Ω–∞—Ä—É–∂–∏
OPEN_PORT_EXTERNALLY="true"
# –ü–æ—Ä—Ç —Ö–æ—Å—Ç–∞
HOST_PORT=11001
# –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
SERVICE_NAME="main_app"

# –ò–º—è —Å–µ—Ç–∏ Docker
DOCKER_NETWORK_NAME="networklocal1"
# –°–ø–∏—Å–æ–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π Docker, –∫ –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
ADDITIONAL_DOCKER_NETWORKS=""

# IP-–∞–¥—Ä–µ—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ hosts –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
DATABASE_HOST_IP=""

W_BUILD="false"
W_START="false"

# –†–∞–∑–±–æ—Ä –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [ $# -gt 0 ]; do
  case "$1" in
    OPEN_PORT_EXTERNALLY=*)
      OPEN_PORT_EXTERNALLY="${1#*=}"
      ;;
    HOST_PORT=*)
      HOST_PORT="${1#*=}"
      ;;
    SERVICE_NAME=*)
      SERVICE_NAME="${1#*=}"
      ;;
    DOCKER_NETWORK_NAME=*)
      DOCKER_NETWORK_NAME="${1#*=}"
      ;;
    DATABASE_HOST_IP=*)
      DATABASE_HOST_IP="${1#*=}"
      ;;
    W_BUILD=*)
      W_BUILD="${1#*=}"
      ;;
    W_START=*)
      W_START="${1#*=}"
      ;;
    *)
      echo "–û—à–∏–±–∫–∞: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä $1" >&2
      exit 1
      ;;
  esac
  shift
done


# –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
IMAGE_NAME="${SERVICE_NAME}_i"
# –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
CONTAINER_NAME="${SERVICE_NAME}_c"
# –ò–º—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
APP_NAME="${SERVICE_NAME}_app"

if [ "$W_BUILD" = "true" ]; then
  # –ë–∏–ª–¥ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞
  ./build.sh $APP_NAME

  # –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑
  docker build  --no-cache --build-arg APP_NAME=$APP_NAME -t $IMAGE_NAME .
fi


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
if [ "$W_START" = "true" ]; then
  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø–µ—Ä–µ–¥ –µ–≥–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∏ —É–¥–∞–ª–µ–Ω–∏–µ–º
  if docker ps -a --format "{{.Names}}" | grep -w "^$CONTAINER_NAME$"; then
    docker stop $CONTAINER_NAME
    docker rm $CONTAINER_NAME
  fi

  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –ø–æ—Ä—Ç –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –º–∏—Ä–∞
  PORT_MAPPING=""
  if [ "$OPEN_PORT_EXTERNALLY" = "true" ]; then
    PORT_MAPPING="-p $HOST_PORT:$HOST_PORT"
  fi

  if [ -n "$DATABASE_HOST_IP" ]; then
    ADD_HOST_OPTION="--add-host=database_host:$DATABASE_HOST_IP"
  else
    ADD_HOST_OPTION=""
  fi

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏ –∏ —Å–æ–∑–¥–∞–µ–º, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  docker network ls | grep $DOCKER_NETWORK_NAME || docker network create $DOCKER_NETWORK_NAME

  # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –Ω–æ–≤—ã–º –æ–±—Ä–∞–∑–æ–º –≤ —Å–µ—Ç–µ–≤–æ–º —Ä–µ–∂–∏–º–µ host –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º –∫ —Å–µ—Ç–∏ –ø–æ –∏–º–µ–Ω–∏
  docker run -d \
  $PORT_MAPPING \
  $ADD_HOST_OPTION \
  --network $DOCKER_NETWORK_NAME \
  --restart always \
  --name $CONTAINER_NAME \
  -e APP_NAME=$APP_NAME \
  $IMAGE_NAME

  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Å–µ—Ç—è–º Docker, –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç–æ–π
  if [ -n "$ADDITIONAL_DOCKER_NETWORKS" ]; then
    for network in $ADDITIONAL_DOCKER_NETWORKS; do
        docker network connect $network $CONTAINER_NAME
        echo "üü¢ Container $CONTAINER_NAME is connected to additional network $network"
    done
  fi

  echo "üü¢ Container $CONTAINER_NAME is running on port $HOST_PORT"
fi

echo "üü¢ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω $APP_NAME"
